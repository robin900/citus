--
-- MULTI_TRUNCATE
--
ALTER SEQUENCE pg_catalog.pg_dist_shardid_seq RESTART 1210000;
ALTER SEQUENCE pg_catalog.pg_dist_jobid_seq RESTART 1210000;
--
-- truncate for append distribution
-- expect all shards to be dropped
--
CREATE TABLE test_truncate_append(a int);
SELECT master_create_distributed_table('test_truncate_append', 'a', 'append');
 master_create_distributed_table 
---------------------------------
 
(1 row)

-- verify no error is thrown when no shards are present
TRUNCATE TABLE test_truncate_append;
SELECT master_create_empty_shard('test_truncate_append') AS new_shard_id \gset
UPDATE pg_dist_shard SET shardminvalue = 1, shardmaxvalue = 500
WHERE shardid = :new_shard_id;
SELECT count(*) FROM test_truncate_append;
 count 
-------
     0
(1 row)

INSERT INTO test_truncate_append values (1);
SELECT count(*) FROM test_truncate_append;
 count 
-------
     1
(1 row)

-- create some more shards
SELECT master_create_empty_shard('test_truncate_append');
 master_create_empty_shard 
---------------------------
                   1210001
(1 row)

SELECT master_create_empty_shard('test_truncate_append');
 master_create_empty_shard 
---------------------------
                   1210002
(1 row)

-- verify 3 shards are presents
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_append'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
        20270 | 1210000 | t            |            | 1             | 500
        20270 | 1210001 | t            |            |               | 
        20270 | 1210002 | t            |            |               | 
(3 rows)

TRUNCATE TABLE test_truncate_append;
-- verify data is truncated from the table
SELECT count(*) FROM test_truncate_append;
 count 
-------
      
(1 row)

-- verify no shard exists anymore
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_append'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
(0 rows)

DROP TABLE test_truncate_append;
--
-- truncate for range distribution
-- expect shard to be present, data to be truncated
--
CREATE TABLE test_truncate_range(a int);
SELECT master_create_distributed_table('test_truncate_range', 'a', 'range');
 master_create_distributed_table 
---------------------------------
 
(1 row)

-- verify no error is thrown when no shards are present
TRUNCATE TABLE test_truncate_range;
SELECT master_create_empty_shard('test_truncate_range') AS new_shard_id \gset
UPDATE pg_dist_shard SET shardminvalue = 1, shardmaxvalue = 500
WHERE shardid = :new_shard_id;
SELECT master_create_empty_shard('test_truncate_range') AS new_shard_id \gset
UPDATE pg_dist_shard SET shardminvalue = 501, shardmaxvalue = 1500
WHERE shardid = :new_shard_id;
SELECT master_create_empty_shard('test_truncate_range') AS new_shard_id \gset
UPDATE pg_dist_shard SET shardminvalue = 1501, shardmaxvalue = 2500
WHERE shardid = :new_shard_id;
SELECT count(*) FROM test_truncate_range;
 count 
-------
     0
(1 row)

INSERT INTO test_truncate_range values (1);
INSERT INTO test_truncate_range values (1001);
INSERT INTO test_truncate_range values (2000);
INSERT INTO test_truncate_range values (100);
SELECT count(*) FROM test_truncate_range;
 count 
-------
     4
(1 row)

-- verify 3 shards are presents
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_range'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
        20291 | 1210003 | t            |            | 1             | 500
        20291 | 1210004 | t            |            | 501           | 1500
        20291 | 1210005 | t            |            | 1501          | 2500
(3 rows)

TRUNCATE TABLE test_truncate_range;
-- verify data is truncated from the table
SELECT count(*) FROM test_truncate_range;
 count 
-------
     0
(1 row)

-- verify 3 shards are still present
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_range'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
        20291 | 1210003 | t            |            | 1             | 500
        20291 | 1210004 | t            |            | 501           | 1500
        20291 | 1210005 | t            |            | 1501          | 2500
(3 rows)

DROP TABLE test_truncate_range;
--
-- truncate for hash distribution.
-- expect shard to be present, data to be truncated
--
CREATE TABLE test_truncate_hash(a int);
SELECT master_create_distributed_table('test_truncate_hash', 'a', 'hash');
 master_create_distributed_table 
---------------------------------
 
(1 row)

-- verify no error is thrown when no shards are present
TRUNCATE TABLE test_truncate_hash;
SELECT count(*) FROM test_truncate_hash;
 count 
-------
     0
(1 row)

INSERT INTO test_truncate_hash values (1);
ERROR:  could not find any shards
DETAIL:  No shards exist for distributed table "test_truncate_hash".
HINT:  Run master_create_worker_shards to create shards and try again.
INSERT INTO test_truncate_hash values (1001);
ERROR:  could not find any shards
DETAIL:  No shards exist for distributed table "test_truncate_hash".
HINT:  Run master_create_worker_shards to create shards and try again.
INSERT INTO test_truncate_hash values (2000);
ERROR:  could not find any shards
DETAIL:  No shards exist for distributed table "test_truncate_hash".
HINT:  Run master_create_worker_shards to create shards and try again.
INSERT INTO test_truncate_hash values (100);
ERROR:  could not find any shards
DETAIL:  No shards exist for distributed table "test_truncate_hash".
HINT:  Run master_create_worker_shards to create shards and try again.
SELECT count(*) FROM test_truncate_hash;
 count 
-------
     0
(1 row)

-- verify 4 shards are present
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_hash'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
(0 rows)

TRUNCATE TABLE test_truncate_hash;
SELECT master_create_worker_shards('test_truncate_hash', 4, 1);
 master_create_worker_shards 
-----------------------------
 
(1 row)

INSERT INTO test_truncate_hash values (1);
INSERT INTO test_truncate_hash values (1001);
INSERT INTO test_truncate_hash values (2000);
INSERT INTO test_truncate_hash values (100);
SELECT count(*) FROM test_truncate_hash;
 count 
-------
     4
(1 row)

TRUNCATE TABLE test_truncate_hash;
-- verify data is truncated from the table
SELECT count(*) FROM test_truncate_hash;
 count 
-------
     0
(1 row)

-- verify 4 shards are still presents
SELECT * FROM pg_dist_shard where logicalrelid = 'test_truncate_hash'::regclass;
 logicalrelid | shardid | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+---------+--------------+------------+---------------+---------------
        20312 | 1210006 | t            |            | -2147483648   | -1073741825
        20312 | 1210007 | t            |            | -1073741824   | -1
        20312 | 1210008 | t            |            | 0             | 1073741823
        20312 | 1210009 | t            |            | 1073741824    | 2147483647
(4 rows)

DROP TABLE test_truncate_hash;
